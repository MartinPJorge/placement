commit d508824fde72e265940533082e0786e5d5ee97c7
Author: Balazs Nemeth <balazs.nemeth@tmit.bme.hu>
Date:   Tue Nov 12 18:11:35 2019 +0100

    fix whitespace issue

diff --git a/simulator/feasibility_sweep_meta_config.yml b/simulator/feasibility_sweep_meta_config.yml
index b0a4fa2..9e2996b 100644
--- a/simulator/feasibility_sweep_meta_config.yml
+++ b/simulator/feasibility_sweep_meta_config.yml
@@ -1,6 +1,6 @@
 base_config_file: "feasibility_sweep_base_config.yml"                                     # Path to config file which stores the structure and
                                                                             # the default simulation parameters.
-simulation_name: "feasibility_sweep"	                                     # String identifying the experiment (folder created for it)
+simulation_name: "feasibility_sweep"                                        # String identifying the experiment (folder created for it)
 threads: 2                                                                  # number of parallel executions of simulations
 non_product_groups:                                                         # list of keys from the config file, where instead of product, zipping should be applied for creating the single configs
   - [optimization.improvement_score_limit, simulator.run_ampl]
commit ee70fbb48b53fabf34edabe3d0bd80585ca25a79
Author: Balazs Nemeth <balazs.nemeth@tmit.bme.hu>
Date:   Tue Nov 12 16:26:10 2019 +0100

    Add interruption after 20 mins

diff --git a/placement/constructive_mapper_from_fractional.py b/placement/constructive_mapper_from_fractional.py
index a2b58b2..ac7b7a5 100644
--- a/placement/constructive_mapper_from_fractional.py
+++ b/placement/constructive_mapper_from_fractional.py
@@ -460,6 +460,9 @@ class ConstructiveMapperFromFractional(AbstractMapper):
                     anything_left_to_improve, any_violation_left = self.improve_item_to_bin_mappings(best_bins)
                 if not any_violation_left:
                     break
+                if time.time() - start_timestamp > 1200:
+                    self.log.warn("Interrupting heuristic algorithm due to running longer than 1200s...")
+                    break
                 # get new bin : if there is nothing left to improve with the current bins, we can introduce new ones
                 best_bins, can_add_next_bin = self.get_new_best_bins(best_bins, any_violation_left)
         except UnfeasibleVolatileResourcesProblem as ubp:
